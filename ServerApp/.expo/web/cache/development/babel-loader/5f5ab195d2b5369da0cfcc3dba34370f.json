{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useRef, useState } from \"react\";\nimport styles from \"./style\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { TextInput, RadioButton, Button, Divider, Text } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MyOrder(props) {\n  var refMyOrder = props.refMyOrder;\n\n  var _useState = useState(-1),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemPressed = _useState2[0],\n      setItemPressed = _useState2[1];\n\n  return _jsx(RBSheet, {\n    height: Dimensions.get(\"window\").height,\n    ref: refMyOrder,\n    closeOnDragDown: false,\n    closeOnPressMask: true,\n    animationType: \"slide\",\n    customStyles: {\n      wrapper: {\n        backgroundColor: \"\"\n      },\n      container: {\n        backgroundColor: \"#e1fcfc\"\n      }\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(View, {\n        style: {\n          backgroundColor: '#abdcf5'\n        },\n        children: _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            margin: 15\n          },\n          children: [_jsx(Pressable, {\n            style: styles.backButton,\n            on: true,\n            onPress: function onPress() {\n              refMyOrder.current.close();\n            },\n            children: _jsx(AntDesign, {\n              name: \"left\",\n              size: 24,\n              color: \"#127cc0\"\n            })\n          }), _jsx(Text, {\n            style: styles.head,\n            children: \"My Orders\"\n          })]\n        })\n      }), _jsxs(View, {\n        style: styles.maincontainer,\n        children: [_jsx(Divider, {\n          style: styles.divider\n        }), _jsxs(View, {\n          style: styles.container1,\n          children: [_jsx(Pressable, {\n            onPress: function onPress() {\n              return setItemPressed(1);\n            },\n            style: {\n              borderBottomWidth: 3,\n              borderBottomColor: itemPressed == 1 ? \"#127cc0\" : \"#d6edff\",\n              borderRadius: 0,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginLeft: 20\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 14,\n                color: \"black\"\n              },\n              children: \"In process\"\n            })\n          }), _jsx(Pressable, {\n            onPress: function onPress() {\n              return setItemPressed(2);\n            },\n            style: {\n              borderBottomWidth: 3,\n              borderBottomColor: itemPressed == 2 ? \"#127cc0\" : \"#d6edff\",\n              borderRadius: 0,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginLeft: 20\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 14,\n                color: \"black\"\n              },\n              children: \"History\"\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.container2,\n          children: [_jsx(Text, {\n            style: styles.text2,\n            children: \"You have not placed any any orders yet.\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            children: _jsx(Text, {\n              style: styles.text1,\n              children: \"Start Shopping\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useRef","useState","styles","RBSheet","AntDesign","TextInput","RadioButton","Button","Divider","Text","MyOrder","props","refMyOrder","itemPressed","setItemPressed","Dimensions","get","height","wrapper","backgroundColor","container","flex","flexDirection","margin","backButton","current","close","head","maincontainer","divider","container1","borderBottomWidth","borderBottomColor","borderRadius","alignItems","justifyContent","marginLeft","fontSize","color","container2","text2","button","text1"],"sources":["D:/Study/Smester 5/MobileApp-Development/Project/Servaid_Expo/src/screens/myOrder/index.js"],"sourcesContent":["import { View, Dimensions, Pressable , TouchableOpacity} from \"react-native\";\r\nimport React ,{useRef , useState} from \"react\";\r\nimport styles from \"./style\";\r\nimport RBSheet from \"react-native-raw-bottom-sheet\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { TextInput , RadioButton  ,Button, Divider, Text} from \"react-native-paper\";\r\n\r\n\r\nexport default function MyOrder(props) {\r\n  const refMyOrder = props.refMyOrder;\r\n  const [itemPressed, setItemPressed] = useState(-1);\r\n  return (\r\n    <RBSheet\r\n      height={Dimensions.get(\"window\").height}\r\n      ref={refMyOrder}\r\n      closeOnDragDown={false}\r\n      closeOnPressMask={true}\r\n      animationType={\"slide\"}\r\n      customStyles={{\r\n        wrapper: {\r\n          backgroundColor: \"\",\r\n        },\r\n        container: {\r\n          backgroundColor: \"#e1fcfc\",\r\n        },\r\n      }}\r\n    >\r\n      <View style={{ flex: 1 }}>\r\n      <View style={{backgroundColor:'#abdcf5'}}>\r\n      <View style={{flexDirection:\"row\" , margin:15}}>\r\n     <Pressable\r\n          style={styles.backButton}\r\n          on\r\n          onPress={() => {\r\n            refMyOrder.current.close();\r\n          }}\r\n        >\r\n          <AntDesign name=\"left\" size={24} color=\"#127cc0\" />\r\n        </Pressable>\r\n        <Text style={styles.head}>My Orders</Text>\r\n     </View>\r\n     </View>\r\n     \r\n<View style={styles.maincontainer}>\r\n      <Divider style={styles.divider} />\r\n\r\n      <View style={styles.container1}>\r\n        <Pressable\r\n          onPress={() => setItemPressed(1)}\r\n          style={{\r\n            borderBottomWidth: 3,\r\n            borderBottomColor: itemPressed == 1 ? \"#127cc0\" : \"#d6edff\",\r\n            borderRadius: 0,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginLeft:20,\r\n            \r\n          }}\r\n        >\r\n        <Text  style={{fontSize:14, color:\"black\"}}>In process</Text>\r\n          \r\n        </Pressable>\r\n\r\n        <Pressable\r\n\r\n          onPress={() => setItemPressed(2)}\r\n          style={{\r\n            borderBottomWidth: 3,\r\n            borderBottomColor: itemPressed == 2 ? \"#127cc0\" : \"#d6edff\",\r\n            borderRadius: 0,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginLeft:20,\r\n            \r\n          }}\r\n        >\r\n          <Text style={{fontSize:14, color:\"black\"}}>History</Text>\r\n        </Pressable>\r\n      </View>\r\n\r\n      <View style={styles.container2}>\r\n        <Text style={styles.text2}>\r\n          You have not placed any any orders yet.\r\n        </Text>\r\n\r\n        <TouchableOpacity style={styles.button}>\r\n          <Text style={styles.text1}>Start Shopping</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n</View>\r\n     \r\n    </RBSheet>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
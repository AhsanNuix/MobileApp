{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Card } from \"react-native-paper\";\nimport styles from \"./style\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport QuantitySelector from \"../quantitySelector/index\";\nimport { Store } from \"../../contexts/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProductCard(props) {\n  var _useState = useState(\"#127cc0\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      buttonColor = _useState2[0],\n      setButtonColor = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      check = _useState4[0],\n      setCheck = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      qty = _useState6[0],\n      setQty = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selector = _useState8[0],\n      setSelector = _useState8[1];\n\n  var _useContext = useContext(Store),\n      setCartArray = _useContext.setCartArray,\n      cartArray = _useContext.cartArray,\n      prod = _useContext.prod,\n      setProd = _useContext.setProd;\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      myProd = _useState10[0],\n      setMyProd = _useState10[1];\n\n  useEffect(function () {\n    setButtonColor(cartArray.find(function (current) {\n      return current === props.product;\n    }) ? \"#20ab23\" : \"#127cc0\");\n    setCheck(cartArray.find(function (current) {\n      return current === props.product;\n    }) ? true : false);\n  }, [cartArray]);\n  return _jsxs(Card, {\n    style: styles.container,\n    onPress: props.onPressHandler,\n    children: [_jsx(Card.Cover, {\n      style: styles.image,\n      source: {\n        uri: props.product.image\n      }\n    }), _jsxs(View, {\n      style: styles.points,\n      children: [_jsx(Image, {\n        style: styles.star,\n        source: require(\"../../assets/images/star.png\")\n      }), _jsx(Text, {\n        style: styles.starText,\n        children: props.product.point\n      })]\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        style: styles.title,\n        numberOfLines: 2,\n        children: props.product.title\n      })\n    }), _jsx(View, {\n      children: _jsxs(Text, {\n        style: styles.price,\n        children: [\"Rs. \", props.product.price]\n      })\n    }), !selector ? _jsx(Pressable, {\n      style: [styles.button, {\n        backgroundColor: buttonColor\n      }],\n      onPress: function onPress() {\n        if (buttonColor === \"#127cc0\") {\n          setCartArray(cartArray.concat([props.product]));\n          setButtonColor(\"#20ab23\");\n        }\n\n        setSelector(true);\n        setTimeout(function () {\n          setCheck(true);\n          setSelector(false);\n        }, 2000);\n      },\n      children: !check ? _jsx(FontAwesome5, {\n        name: \"plus\",\n        size: 20,\n        color: \"white\"\n      }) : _jsx(Text, {\n        style: styles.buttonText,\n        children: props.product.current\n      })\n    }) : _jsx(View, {\n      style: {\n        alignItems: \"flex-end\"\n      },\n      children: _jsx(QuantitySelector, {\n        product: props.product,\n        onPressDelete: function onPressDelete() {\n          setButtonColor(\"#127cc0\");\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useContext","useEffect","Card","styles","FontAwesome5","QuantitySelector","Store","ProductCard","props","buttonColor","setButtonColor","check","setCheck","qty","setQty","selector","setSelector","setCartArray","cartArray","prod","setProd","myProd","setMyProd","find","current","product","container","onPressHandler","image","uri","points","star","require","starText","point","title","price","button","backgroundColor","concat","setTimeout","buttonText","alignItems"],"sources":["D:/Study/Smester 5/MobileApp-Development/Project/Servaid_Expo/src/components/productCard/index.js"],"sourcesContent":["import { View, Text, Pressable, Alert , Image } from \"react-native\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { Card } from \"react-native-paper\";\r\nimport styles from \"./style\";\r\nimport { FontAwesome5 } from \"@expo/vector-icons\";\r\nimport QuantitySelector from \"../quantitySelector/index\";\r\nimport { Store } from \"../../contexts/context\";\r\nexport default function ProductCard(props) {\r\n  const [buttonColor, setButtonColor] = useState(\"#127cc0\");\r\n  const [check, setCheck] = useState(false);\r\n  const [qty, setQty] = useState(0);\r\n  const [selector, setSelector] = useState(false);\r\n  const { setCartArray, cartArray, prod, setProd } = useContext(Store);\r\n  const [myProd , setMyProd] = useState({})\r\n\r\n  useEffect(() => {\r\n    setButtonColor(cartArray.find((current) => current === props.product) ? \"#20ab23\" : \"#127cc0\");\r\n    setCheck(cartArray.find((current) => current === props.product) ? true : false)\r\n  }, [cartArray]);\r\n\r\n  // let update =()=>{ buttonColor === \"#127cc0\"\r\n  // ? null\r\n  // : setCartArray(\r\n  //     cartArray.map((item) => {\r\n  //       if (item.id === props.product.id) {\r\n  //         item.current = qty;\r\n  //         setMyProd(item)\r\n  //         return props.product;\r\n  //       }\r\n  //       return item;\r\n  //     })\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <Card style={styles.container} onPress={props.onPressHandler}>\r\n      <Card.Cover style={styles.image} source={{ uri: props.product.image }} />\r\n      <View style={styles.points}>\r\n        <Image style={styles.star} source={require('../../assets/images/star.png')}/>\r\n        <Text style={styles.starText}>{props.product.point}</Text>\r\n      </View>\r\n      <View>\r\n        <Text style={styles.title} numberOfLines={2}>\r\n          {props.product.title}\r\n        </Text>\r\n      </View>\r\n      <View>\r\n        <Text style={styles.price}>Rs. {props.product.price}</Text>\r\n      </View>\r\n      {!selector ? (\r\n        <Pressable\r\n          style={[styles.button, { backgroundColor: buttonColor }]}\r\n          onPress={() => {\r\n            if (buttonColor === \"#127cc0\") {\r\n              setCartArray(cartArray.concat([props.product]));\r\n              setButtonColor(\"#20ab23\");\r\n            }\r\n            setSelector(true);\r\n            setTimeout(() => {\r\n              setCheck(true);\r\n              setSelector(false);\r\n            }, 2000);\r\n          }}\r\n        >\r\n          {!check ? (\r\n            <FontAwesome5 name=\"plus\" size={20} color=\"white\" />\r\n          ) : (\r\n            <Text style={styles.buttonText}>{props.product.current}</Text>\r\n          )}\r\n        </Pressable>\r\n      ) : (\r\n        <View style={{ alignItems: \"flex-end\" }}>\r\n          <QuantitySelector product={props.product} onPressDelete={() => {\r\n              setButtonColor(\"#127cc0\");\r\n            }}/>\r\n        </View>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}